syntax = "proto3";

package customer.v1;

option go_package = "github.com/Dhoini/Payment-microservice/proto/customer/v1;customerpb";

import "google/protobuf/timestamp.proto";

// CustomerService предоставляет API для управления клиентами
service CustomerService {
  // CreateCustomer создает нового клиента
  rpc CreateCustomer(CreateCustomerRequest) returns (CustomerResponse) {}

  // GetCustomer возвращает информацию о клиенте по ID
  rpc GetCustomer(GetCustomerRequest) returns (CustomerResponse) {}

  // ListCustomers возвращает список клиентов
  rpc ListCustomers(ListCustomersRequest) returns (ListCustomersResponse) {}

  // UpdateCustomer обновляет информацию о клиенте
  rpc UpdateCustomer(UpdateCustomerRequest) returns (CustomerResponse) {}

  // DeleteCustomer удаляет клиента
  rpc DeleteCustomer(DeleteCustomerRequest) returns (DeleteCustomerResponse) {}
}

// CreateCustomerRequest запрос на создание клиента
message CreateCustomerRequest {
  string email = 1;
  string name = 2;
  string phone = 3;
  string external_id = 4;
  map<string, string> metadata = 5;
}

// GetCustomerRequest запрос на получение клиента
message GetCustomerRequest {
  string id = 1;
}

// ListCustomersRequest запрос на получение списка клиентов
message ListCustomersRequest {
  int32 limit = 1;
  int32 offset = 2;
  string search = 3;
}

// UpdateCustomerRequest запрос на обновление клиента
message UpdateCustomerRequest {
  string id = 1;
  string email = 2;
  string name = 3;
  string phone = 4;
  string external_id = 5;
  map<string, string> metadata = 6;
}

// DeleteCustomerRequest запрос на удаление клиента
message DeleteCustomerRequest {
  string id = 1;
}

// CustomerResponse ответ с информацией о клиенте
message CustomerResponse {
  string id = 1;
  string email = 2;
  string name = 3;
  string phone = 4;
  string external_id = 5;
  map<string, string> metadata = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// ListCustomersResponse ответ со списком клиентов
message ListCustomersResponse {
  repeated CustomerResponse customers = 1;
  int32 total = 2;
}

// DeleteCustomerResponse ответ на удаление клиента
message DeleteCustomerResponse {
  bool success = 1;
}