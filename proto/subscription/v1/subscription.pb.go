// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/subscription/v1/subscription.proto

package subscriptionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SubscriptionStatus статус подписки
type SubscriptionStatus int32

const (
	SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED SubscriptionStatus = 0
	SubscriptionStatus_SUBSCRIPTION_STATUS_ACTIVE      SubscriptionStatus = 1
	SubscriptionStatus_SUBSCRIPTION_STATUS_TRIALING    SubscriptionStatus = 2
	SubscriptionStatus_SUBSCRIPTION_STATUS_CANCELED    SubscriptionStatus = 3
	SubscriptionStatus_SUBSCRIPTION_STATUS_PAUSED      SubscriptionStatus = 4
)

// Enum value maps for SubscriptionStatus.
var (
	SubscriptionStatus_name = map[int32]string{
		0: "SUBSCRIPTION_STATUS_UNSPECIFIED",
		1: "SUBSCRIPTION_STATUS_ACTIVE",
		2: "SUBSCRIPTION_STATUS_TRIALING",
		3: "SUBSCRIPTION_STATUS_CANCELED",
		4: "SUBSCRIPTION_STATUS_PAUSED",
	}
	SubscriptionStatus_value = map[string]int32{
		"SUBSCRIPTION_STATUS_UNSPECIFIED": 0,
		"SUBSCRIPTION_STATUS_ACTIVE":      1,
		"SUBSCRIPTION_STATUS_TRIALING":    2,
		"SUBSCRIPTION_STATUS_CANCELED":    3,
		"SUBSCRIPTION_STATUS_PAUSED":      4,
	}
)

func (x SubscriptionStatus) Enum() *SubscriptionStatus {
	p := new(SubscriptionStatus)
	*p = x
	return p
}

func (x SubscriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_subscription_v1_subscription_proto_enumTypes[0].Descriptor()
}

func (SubscriptionStatus) Type() protoreflect.EnumType {
	return &file_proto_subscription_v1_subscription_proto_enumTypes[0]
}

func (x SubscriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionStatus.Descriptor instead.
func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{0}
}

// SubscriptionInterval период подписки
type SubscriptionInterval int32

const (
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED SubscriptionInterval = 0
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_DAY         SubscriptionInterval = 1
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_WEEK        SubscriptionInterval = 2
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_MONTH       SubscriptionInterval = 3
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_YEAR        SubscriptionInterval = 4
)

// Enum value maps for SubscriptionInterval.
var (
	SubscriptionInterval_name = map[int32]string{
		0: "SUBSCRIPTION_INTERVAL_UNSPECIFIED",
		1: "SUBSCRIPTION_INTERVAL_DAY",
		2: "SUBSCRIPTION_INTERVAL_WEEK",
		3: "SUBSCRIPTION_INTERVAL_MONTH",
		4: "SUBSCRIPTION_INTERVAL_YEAR",
	}
	SubscriptionInterval_value = map[string]int32{
		"SUBSCRIPTION_INTERVAL_UNSPECIFIED": 0,
		"SUBSCRIPTION_INTERVAL_DAY":         1,
		"SUBSCRIPTION_INTERVAL_WEEK":        2,
		"SUBSCRIPTION_INTERVAL_MONTH":       3,
		"SUBSCRIPTION_INTERVAL_YEAR":        4,
	}
)

func (x SubscriptionInterval) Enum() *SubscriptionInterval {
	p := new(SubscriptionInterval)
	*p = x
	return p
}

func (x SubscriptionInterval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionInterval) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_subscription_v1_subscription_proto_enumTypes[1].Descriptor()
}

func (SubscriptionInterval) Type() protoreflect.EnumType {
	return &file_proto_subscription_v1_subscription_proto_enumTypes[1]
}

func (x SubscriptionInterval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionInterval.Descriptor instead.
func (SubscriptionInterval) EnumDescriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{1}
}

// CreateSubscriptionRequest запрос на создание подписки
type CreateSubscriptionRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CustomerId             string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PlanId                 string                 `protobuf:"bytes,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	TrialPeriodDays        int32                  `protobuf:"varint,3,opt,name=trial_period_days,json=trialPeriodDays,proto3" json:"trial_period_days,omitempty"`
	DefaultPaymentMethodId string                 `protobuf:"bytes,4,opt,name=default_payment_method_id,json=defaultPaymentMethodId,proto3" json:"default_payment_method_id,omitempty"`
	Metadata               map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateSubscriptionRequest) Reset() {
	*x = CreateSubscriptionRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionRequest) ProtoMessage() {}

func (x *CreateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubscriptionRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetTrialPeriodDays() int32 {
	if x != nil {
		return x.TrialPeriodDays
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetDefaultPaymentMethodId() string {
	if x != nil {
		return x.DefaultPaymentMethodId
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// GetSubscriptionRequest запрос на получение подписки
type GetSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *GetSubscriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ListSubscriptionsRequest запрос на получение списка подписок
type ListSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        SubscriptionStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=subscription.v1.SubscriptionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsRequest) Reset() {
	*x = ListSubscriptionsRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsRequest) ProtoMessage() {}

func (x *ListSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *ListSubscriptionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSubscriptionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSubscriptionsRequest) GetStatus() SubscriptionStatus {
	if x != nil {
		return x.Status
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

// ListSubscriptionsByCustomerRequest запрос на получение списка подписок клиента
type ListSubscriptionsByCustomerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CustomerId    string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        SubscriptionStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=subscription.v1.SubscriptionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsByCustomerRequest) Reset() {
	*x = ListSubscriptionsByCustomerRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsByCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsByCustomerRequest) ProtoMessage() {}

func (x *ListSubscriptionsByCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsByCustomerRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsByCustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *ListSubscriptionsByCustomerRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ListSubscriptionsByCustomerRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSubscriptionsByCustomerRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSubscriptionsByCustomerRequest) GetStatus() SubscriptionStatus {
	if x != nil {
		return x.Status
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

// CancelSubscriptionRequest запрос на отмену подписки
type CancelSubscriptionRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CancelAtPeriodEnd bool                   `protobuf:"varint,2,opt,name=cancel_at_period_end,json=cancelAtPeriodEnd,proto3" json:"cancel_at_period_end,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CancelSubscriptionRequest) Reset() {
	*x = CancelSubscriptionRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionRequest) ProtoMessage() {}

func (x *CancelSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{4}
}

func (x *CancelSubscriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CancelSubscriptionRequest) GetCancelAtPeriodEnd() bool {
	if x != nil {
		return x.CancelAtPeriodEnd
	}
	return false
}

// PauseSubscriptionRequest запрос на приостановку подписки
type PauseSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseSubscriptionRequest) Reset() {
	*x = PauseSubscriptionRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseSubscriptionRequest) ProtoMessage() {}

func (x *PauseSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*PauseSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *PauseSubscriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ResumeSubscriptionRequest запрос на возобновление подписки
type ResumeSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeSubscriptionRequest) Reset() {
	*x = ResumeSubscriptionRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeSubscriptionRequest) ProtoMessage() {}

func (x *ResumeSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ResumeSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{6}
}

func (x *ResumeSubscriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SubscriptionResponse ответ с информацией о подписке
type SubscriptionResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId             string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PlanId                 string                 `protobuf:"bytes,3,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Status                 SubscriptionStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=subscription.v1.SubscriptionStatus" json:"status,omitempty"`
	CurrentPeriodStart     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=current_period_start,json=currentPeriodStart,proto3" json:"current_period_start,omitempty"`
	CurrentPeriodEnd       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=current_period_end,json=currentPeriodEnd,proto3" json:"current_period_end,omitempty"`
	CanceledAt             *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=canceled_at,json=canceledAt,proto3" json:"canceled_at,omitempty"`
	CancelAtPeriodEnd      bool                   `protobuf:"varint,8,opt,name=cancel_at_period_end,json=cancelAtPeriodEnd,proto3" json:"cancel_at_period_end,omitempty"`
	TrialStart             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=trial_start,json=trialStart,proto3" json:"trial_start,omitempty"`
	TrialEnd               *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=trial_end,json=trialEnd,proto3" json:"trial_end,omitempty"`
	DefaultPaymentMethodId string                 `protobuf:"bytes,11,opt,name=default_payment_method_id,json=defaultPaymentMethodId,proto3" json:"default_payment_method_id,omitempty"`
	Metadata               map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExternalId             string                 `protobuf:"bytes,13,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SubscriptionResponse) Reset() {
	*x = SubscriptionResponse{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionResponse) ProtoMessage() {}

func (x *SubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{7}
}

func (x *SubscriptionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SubscriptionResponse) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *SubscriptionResponse) GetStatus() SubscriptionStatus {
	if x != nil {
		return x.Status
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

func (x *SubscriptionResponse) GetCurrentPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentPeriodStart
	}
	return nil
}

func (x *SubscriptionResponse) GetCurrentPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentPeriodEnd
	}
	return nil
}

func (x *SubscriptionResponse) GetCanceledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CanceledAt
	}
	return nil
}

func (x *SubscriptionResponse) GetCancelAtPeriodEnd() bool {
	if x != nil {
		return x.CancelAtPeriodEnd
	}
	return false
}

func (x *SubscriptionResponse) GetTrialStart() *timestamppb.Timestamp {
	if x != nil {
		return x.TrialStart
	}
	return nil
}

func (x *SubscriptionResponse) GetTrialEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.TrialEnd
	}
	return nil
}

func (x *SubscriptionResponse) GetDefaultPaymentMethodId() string {
	if x != nil {
		return x.DefaultPaymentMethodId
	}
	return ""
}

func (x *SubscriptionResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SubscriptionResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *SubscriptionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SubscriptionResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ListSubscriptionsResponse ответ со списком подписок
type ListSubscriptionsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Subscriptions []*SubscriptionResponse `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	Total         int32                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsResponse) Reset() {
	*x = ListSubscriptionsResponse{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsResponse) ProtoMessage() {}

func (x *ListSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{8}
}

func (x *ListSubscriptionsResponse) GetSubscriptions() []*SubscriptionResponse {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *ListSubscriptionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CreateSubscriptionPlanRequest запрос на создание плана подписки
type CreateSubscriptionPlanRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount          float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency        string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Interval        SubscriptionInterval   `protobuf:"varint,4,opt,name=interval,proto3,enum=subscription.v1.SubscriptionInterval" json:"interval,omitempty"`
	IntervalCount   int32                  `protobuf:"varint,5,opt,name=interval_count,json=intervalCount,proto3" json:"interval_count,omitempty"`
	TrialPeriodDays int32                  `protobuf:"varint,6,opt,name=trial_period_days,json=trialPeriodDays,proto3" json:"trial_period_days,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateSubscriptionPlanRequest) Reset() {
	*x = CreateSubscriptionPlanRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionPlanRequest) ProtoMessage() {}

func (x *CreateSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSubscriptionPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSubscriptionPlanRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateSubscriptionPlanRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateSubscriptionPlanRequest) GetInterval() SubscriptionInterval {
	if x != nil {
		return x.Interval
	}
	return SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED
}

func (x *CreateSubscriptionPlanRequest) GetIntervalCount() int32 {
	if x != nil {
		return x.IntervalCount
	}
	return 0
}

func (x *CreateSubscriptionPlanRequest) GetTrialPeriodDays() int32 {
	if x != nil {
		return x.TrialPeriodDays
	}
	return 0
}

func (x *CreateSubscriptionPlanRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// GetSubscriptionPlanRequest запрос на получение плана подписки
type GetSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionPlanRequest) Reset() {
	*x = GetSubscriptionPlanRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPlanRequest) ProtoMessage() {}

func (x *GetSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubscriptionPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ListSubscriptionPlansRequest запрос на получение списка планов подписок
type ListSubscriptionPlansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	ActiveOnly    bool                   `protobuf:"varint,3,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionPlansRequest) Reset() {
	*x = ListSubscriptionPlansRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionPlansRequest) ProtoMessage() {}

func (x *ListSubscriptionPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionPlansRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionPlansRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{11}
}

func (x *ListSubscriptionPlansRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSubscriptionPlansRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSubscriptionPlansRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *ListSubscriptionPlansRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// UpdateSubscriptionPlanRequest запрос на обновление плана подписки
type UpdateSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Active        bool                   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubscriptionPlanRequest) Reset() {
	*x = UpdateSubscriptionPlanRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionPlanRequest) ProtoMessage() {}

func (x *UpdateSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSubscriptionPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSubscriptionPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSubscriptionPlanRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdateSubscriptionPlanRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// DeleteSubscriptionPlanRequest запрос на удаление плана подписки
type DeleteSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubscriptionPlanRequest) Reset() {
	*x = DeleteSubscriptionPlanRequest{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionPlanRequest) ProtoMessage() {}

func (x *DeleteSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSubscriptionPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SubscriptionPlanResponse ответ с информацией о плане подписки
type SubscriptionPlanResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount          float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency        string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Interval        SubscriptionInterval   `protobuf:"varint,5,opt,name=interval,proto3,enum=subscription.v1.SubscriptionInterval" json:"interval,omitempty"`
	IntervalCount   int32                  `protobuf:"varint,6,opt,name=interval_count,json=intervalCount,proto3" json:"interval_count,omitempty"`
	TrialPeriodDays int32                  `protobuf:"varint,7,opt,name=trial_period_days,json=trialPeriodDays,proto3" json:"trial_period_days,omitempty"`
	Active          bool                   `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	ExternalId      string                 `protobuf:"bytes,9,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscriptionPlanResponse) Reset() {
	*x = SubscriptionPlanResponse{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPlanResponse) ProtoMessage() {}

func (x *SubscriptionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPlanResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionPlanResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{14}
}

func (x *SubscriptionPlanResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionPlanResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubscriptionPlanResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SubscriptionPlanResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SubscriptionPlanResponse) GetInterval() SubscriptionInterval {
	if x != nil {
		return x.Interval
	}
	return SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED
}

func (x *SubscriptionPlanResponse) GetIntervalCount() int32 {
	if x != nil {
		return x.IntervalCount
	}
	return 0
}

func (x *SubscriptionPlanResponse) GetTrialPeriodDays() int32 {
	if x != nil {
		return x.TrialPeriodDays
	}
	return 0
}

func (x *SubscriptionPlanResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SubscriptionPlanResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *SubscriptionPlanResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SubscriptionPlanResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SubscriptionPlanResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ListSubscriptionPlansResponse ответ со списком планов подписок
type ListSubscriptionPlansResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Plans         []*SubscriptionPlanResponse `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	Total         int32                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionPlansResponse) Reset() {
	*x = ListSubscriptionPlansResponse{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionPlansResponse) ProtoMessage() {}

func (x *ListSubscriptionPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionPlansResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionPlansResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{15}
}

func (x *ListSubscriptionPlansResponse) GetPlans() []*SubscriptionPlanResponse {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *ListSubscriptionPlansResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// DeleteSubscriptionPlanResponse ответ на удаление плана подписки
type DeleteSubscriptionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubscriptionPlanResponse) Reset() {
	*x = DeleteSubscriptionPlanResponse{}
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubscriptionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionPlanResponse) ProtoMessage() {}

func (x *DeleteSubscriptionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_v1_subscription_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionPlanResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionPlanResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_v1_subscription_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSubscriptionPlanResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_subscription_v1_subscription_proto protoreflect.FileDescriptor

const file_proto_subscription_v1_subscription_proto_rawDesc = "" +
	"\n" +
	"(proto/subscription/v1/subscription.proto\x12\x0fsubscription.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xcf\x02\n" +
	"\x19CreateSubscriptionRequest\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x12\x17\n" +
	"\aplan_id\x18\x02 \x01(\tR\x06planId\x12*\n" +
	"\x11trial_period_days\x18\x03 \x01(\x05R\x0ftrialPeriodDays\x129\n" +
	"\x19default_payment_method_id\x18\x04 \x01(\tR\x16defaultPaymentMethodId\x12T\n" +
	"\bmetadata\x18\x05 \x03(\v28.subscription.v1.CreateSubscriptionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"(\n" +
	"\x16GetSubscriptionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x85\x01\n" +
	"\x18ListSubscriptionsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12;\n" +
	"\x06status\x18\x03 \x01(\x0e2#.subscription.v1.SubscriptionStatusR\x06status\"\xb0\x01\n" +
	"\"ListSubscriptionsByCustomerRequest\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12;\n" +
	"\x06status\x18\x04 \x01(\x0e2#.subscription.v1.SubscriptionStatusR\x06status\"\\\n" +
	"\x19CancelSubscriptionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\x14cancel_at_period_end\x18\x02 \x01(\bR\x11cancelAtPeriodEnd\"*\n" +
	"\x18PauseSubscriptionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x19ResumeSubscriptionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xf9\x06\n" +
	"\x14SubscriptionResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12\x17\n" +
	"\aplan_id\x18\x03 \x01(\tR\x06planId\x12;\n" +
	"\x06status\x18\x04 \x01(\x0e2#.subscription.v1.SubscriptionStatusR\x06status\x12L\n" +
	"\x14current_period_start\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x12currentPeriodStart\x12H\n" +
	"\x12current_period_end\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x10currentPeriodEnd\x12;\n" +
	"\vcanceled_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"canceledAt\x12/\n" +
	"\x14cancel_at_period_end\x18\b \x01(\bR\x11cancelAtPeriodEnd\x12;\n" +
	"\vtrial_start\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"trialStart\x127\n" +
	"\ttrial_end\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\btrialEnd\x129\n" +
	"\x19default_payment_method_id\x18\v \x01(\tR\x16defaultPaymentMethodId\x12O\n" +
	"\bmetadata\x18\f \x03(\v23.subscription.v1.SubscriptionResponse.MetadataEntryR\bmetadata\x12\x1f\n" +
	"\vexternal_id\x18\r \x01(\tR\n" +
	"externalId\x129\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"~\n" +
	"\x19ListSubscriptionsResponse\x12K\n" +
	"\rsubscriptions\x18\x01 \x03(\v2%.subscription.v1.SubscriptionResponseR\rsubscriptions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\x94\x03\n" +
	"\x1dCreateSubscriptionPlanRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12A\n" +
	"\binterval\x18\x04 \x01(\x0e2%.subscription.v1.SubscriptionIntervalR\binterval\x12%\n" +
	"\x0einterval_count\x18\x05 \x01(\x05R\rintervalCount\x12*\n" +
	"\x11trial_period_days\x18\x06 \x01(\x05R\x0ftrialPeriodDays\x12X\n" +
	"\bmetadata\x18\a \x03(\v2<.subscription.v1.CreateSubscriptionPlanRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\x1aGetSubscriptionPlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x89\x01\n" +
	"\x1cListSubscriptionPlansRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1f\n" +
	"\vactive_only\x18\x03 \x01(\bR\n" +
	"activeOnly\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\"\xf2\x01\n" +
	"\x1dUpdateSubscriptionPlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06active\x18\x03 \x01(\bR\x06active\x12X\n" +
	"\bmetadata\x18\x04 \x03(\v2<.subscription.v1.UpdateSubscriptionPlanRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"/\n" +
	"\x1dDeleteSubscriptionPlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xc9\x04\n" +
	"\x18SubscriptionPlanResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12A\n" +
	"\binterval\x18\x05 \x01(\x0e2%.subscription.v1.SubscriptionIntervalR\binterval\x12%\n" +
	"\x0einterval_count\x18\x06 \x01(\x05R\rintervalCount\x12*\n" +
	"\x11trial_period_days\x18\a \x01(\x05R\x0ftrialPeriodDays\x12\x16\n" +
	"\x06active\x18\b \x01(\bR\x06active\x12\x1f\n" +
	"\vexternal_id\x18\t \x01(\tR\n" +
	"externalId\x12S\n" +
	"\bmetadata\x18\n" +
	" \x03(\v27.subscription.v1.SubscriptionPlanResponse.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\x1dListSubscriptionPlansResponse\x12?\n" +
	"\x05plans\x18\x01 \x03(\v2).subscription.v1.SubscriptionPlanResponseR\x05plans\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\":\n" +
	"\x1eDeleteSubscriptionPlanResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess*\xbd\x01\n" +
	"\x12SubscriptionStatus\x12#\n" +
	"\x1fSUBSCRIPTION_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aSUBSCRIPTION_STATUS_ACTIVE\x10\x01\x12 \n" +
	"\x1cSUBSCRIPTION_STATUS_TRIALING\x10\x02\x12 \n" +
	"\x1cSUBSCRIPTION_STATUS_CANCELED\x10\x03\x12\x1e\n" +
	"\x1aSUBSCRIPTION_STATUS_PAUSED\x10\x04*\xbd\x01\n" +
	"\x14SubscriptionInterval\x12%\n" +
	"!SUBSCRIPTION_INTERVAL_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SUBSCRIPTION_INTERVAL_DAY\x10\x01\x12\x1e\n" +
	"\x1aSUBSCRIPTION_INTERVAL_WEEK\x10\x02\x12\x1f\n" +
	"\x1bSUBSCRIPTION_INTERVAL_MONTH\x10\x03\x12\x1e\n" +
	"\x1aSUBSCRIPTION_INTERVAL_YEAR\x10\x042\xeb\n" +
	"\n" +
	"\x13SubscriptionService\x12i\n" +
	"\x12CreateSubscription\x12*.subscription.v1.CreateSubscriptionRequest\x1a%.subscription.v1.SubscriptionResponse\"\x00\x12c\n" +
	"\x0fGetSubscription\x12'.subscription.v1.GetSubscriptionRequest\x1a%.subscription.v1.SubscriptionResponse\"\x00\x12l\n" +
	"\x11ListSubscriptions\x12).subscription.v1.ListSubscriptionsRequest\x1a*.subscription.v1.ListSubscriptionsResponse\"\x00\x12\x80\x01\n" +
	"\x1bListSubscriptionsByCustomer\x123.subscription.v1.ListSubscriptionsByCustomerRequest\x1a*.subscription.v1.ListSubscriptionsResponse\"\x00\x12i\n" +
	"\x12CancelSubscription\x12*.subscription.v1.CancelSubscriptionRequest\x1a%.subscription.v1.SubscriptionResponse\"\x00\x12g\n" +
	"\x11PauseSubscription\x12).subscription.v1.PauseSubscriptionRequest\x1a%.subscription.v1.SubscriptionResponse\"\x00\x12i\n" +
	"\x12ResumeSubscription\x12*.subscription.v1.ResumeSubscriptionRequest\x1a%.subscription.v1.SubscriptionResponse\"\x00\x12u\n" +
	"\x16CreateSubscriptionPlan\x12..subscription.v1.CreateSubscriptionPlanRequest\x1a).subscription.v1.SubscriptionPlanResponse\"\x00\x12o\n" +
	"\x13GetSubscriptionPlan\x12+.subscription.v1.GetSubscriptionPlanRequest\x1a).subscription.v1.SubscriptionPlanResponse\"\x00\x12x\n" +
	"\x15ListSubscriptionPlans\x12-.subscription.v1.ListSubscriptionPlansRequest\x1a..subscription.v1.ListSubscriptionPlansResponse\"\x00\x12u\n" +
	"\x16UpdateSubscriptionPlan\x12..subscription.v1.UpdateSubscriptionPlanRequest\x1a).subscription.v1.SubscriptionPlanResponse\"\x00\x12{\n" +
	"\x16DeleteSubscriptionPlan\x12..subscription.v1.DeleteSubscriptionPlanRequest\x1a/.subscription.v1.DeleteSubscriptionPlanResponse\"\x00BMZKgithub.com/Dhoini/Payment-microservice/proto/subscription/v1;subscriptionpbb\x06proto3"

var (
	file_proto_subscription_v1_subscription_proto_rawDescOnce sync.Once
	file_proto_subscription_v1_subscription_proto_rawDescData []byte
)

func file_proto_subscription_v1_subscription_proto_rawDescGZIP() []byte {
	file_proto_subscription_v1_subscription_proto_rawDescOnce.Do(func() {
		file_proto_subscription_v1_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_subscription_v1_subscription_proto_rawDesc), len(file_proto_subscription_v1_subscription_proto_rawDesc)))
	})
	return file_proto_subscription_v1_subscription_proto_rawDescData
}

var file_proto_subscription_v1_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_subscription_v1_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_subscription_v1_subscription_proto_goTypes = []any{
	(SubscriptionStatus)(0),                    // 0: subscription.v1.SubscriptionStatus
	(SubscriptionInterval)(0),                  // 1: subscription.v1.SubscriptionInterval
	(*CreateSubscriptionRequest)(nil),          // 2: subscription.v1.CreateSubscriptionRequest
	(*GetSubscriptionRequest)(nil),             // 3: subscription.v1.GetSubscriptionRequest
	(*ListSubscriptionsRequest)(nil),           // 4: subscription.v1.ListSubscriptionsRequest
	(*ListSubscriptionsByCustomerRequest)(nil), // 5: subscription.v1.ListSubscriptionsByCustomerRequest
	(*CancelSubscriptionRequest)(nil),          // 6: subscription.v1.CancelSubscriptionRequest
	(*PauseSubscriptionRequest)(nil),           // 7: subscription.v1.PauseSubscriptionRequest
	(*ResumeSubscriptionRequest)(nil),          // 8: subscription.v1.ResumeSubscriptionRequest
	(*SubscriptionResponse)(nil),               // 9: subscription.v1.SubscriptionResponse
	(*ListSubscriptionsResponse)(nil),          // 10: subscription.v1.ListSubscriptionsResponse
	(*CreateSubscriptionPlanRequest)(nil),      // 11: subscription.v1.CreateSubscriptionPlanRequest
	(*GetSubscriptionPlanRequest)(nil),         // 12: subscription.v1.GetSubscriptionPlanRequest
	(*ListSubscriptionPlansRequest)(nil),       // 13: subscription.v1.ListSubscriptionPlansRequest
	(*UpdateSubscriptionPlanRequest)(nil),      // 14: subscription.v1.UpdateSubscriptionPlanRequest
	(*DeleteSubscriptionPlanRequest)(nil),      // 15: subscription.v1.DeleteSubscriptionPlanRequest
	(*SubscriptionPlanResponse)(nil),           // 16: subscription.v1.SubscriptionPlanResponse
	(*ListSubscriptionPlansResponse)(nil),      // 17: subscription.v1.ListSubscriptionPlansResponse
	(*DeleteSubscriptionPlanResponse)(nil),     // 18: subscription.v1.DeleteSubscriptionPlanResponse
	nil,                                        // 19: subscription.v1.CreateSubscriptionRequest.MetadataEntry
	nil,                                        // 20: subscription.v1.SubscriptionResponse.MetadataEntry
	nil,                                        // 21: subscription.v1.CreateSubscriptionPlanRequest.MetadataEntry
	nil,                                        // 22: subscription.v1.UpdateSubscriptionPlanRequest.MetadataEntry
	nil,                                        // 23: subscription.v1.SubscriptionPlanResponse.MetadataEntry
	(*timestamppb.Timestamp)(nil),              // 24: google.protobuf.Timestamp
}
var file_proto_subscription_v1_subscription_proto_depIdxs = []int32{
	19, // 0: subscription.v1.CreateSubscriptionRequest.metadata:type_name -> subscription.v1.CreateSubscriptionRequest.MetadataEntry
	0,  // 1: subscription.v1.ListSubscriptionsRequest.status:type_name -> subscription.v1.SubscriptionStatus
	0,  // 2: subscription.v1.ListSubscriptionsByCustomerRequest.status:type_name -> subscription.v1.SubscriptionStatus
	0,  // 3: subscription.v1.SubscriptionResponse.status:type_name -> subscription.v1.SubscriptionStatus
	24, // 4: subscription.v1.SubscriptionResponse.current_period_start:type_name -> google.protobuf.Timestamp
	24, // 5: subscription.v1.SubscriptionResponse.current_period_end:type_name -> google.protobuf.Timestamp
	24, // 6: subscription.v1.SubscriptionResponse.canceled_at:type_name -> google.protobuf.Timestamp
	24, // 7: subscription.v1.SubscriptionResponse.trial_start:type_name -> google.protobuf.Timestamp
	24, // 8: subscription.v1.SubscriptionResponse.trial_end:type_name -> google.protobuf.Timestamp
	20, // 9: subscription.v1.SubscriptionResponse.metadata:type_name -> subscription.v1.SubscriptionResponse.MetadataEntry
	24, // 10: subscription.v1.SubscriptionResponse.created_at:type_name -> google.protobuf.Timestamp
	24, // 11: subscription.v1.SubscriptionResponse.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 12: subscription.v1.ListSubscriptionsResponse.subscriptions:type_name -> subscription.v1.SubscriptionResponse
	1,  // 13: subscription.v1.CreateSubscriptionPlanRequest.interval:type_name -> subscription.v1.SubscriptionInterval
	21, // 14: subscription.v1.CreateSubscriptionPlanRequest.metadata:type_name -> subscription.v1.CreateSubscriptionPlanRequest.MetadataEntry
	22, // 15: subscription.v1.UpdateSubscriptionPlanRequest.metadata:type_name -> subscription.v1.UpdateSubscriptionPlanRequest.MetadataEntry
	1,  // 16: subscription.v1.SubscriptionPlanResponse.interval:type_name -> subscription.v1.SubscriptionInterval
	23, // 17: subscription.v1.SubscriptionPlanResponse.metadata:type_name -> subscription.v1.SubscriptionPlanResponse.MetadataEntry
	24, // 18: subscription.v1.SubscriptionPlanResponse.created_at:type_name -> google.protobuf.Timestamp
	24, // 19: subscription.v1.SubscriptionPlanResponse.updated_at:type_name -> google.protobuf.Timestamp
	16, // 20: subscription.v1.ListSubscriptionPlansResponse.plans:type_name -> subscription.v1.SubscriptionPlanResponse
	2,  // 21: subscription.v1.SubscriptionService.CreateSubscription:input_type -> subscription.v1.CreateSubscriptionRequest
	3,  // 22: subscription.v1.SubscriptionService.GetSubscription:input_type -> subscription.v1.GetSubscriptionRequest
	4,  // 23: subscription.v1.SubscriptionService.ListSubscriptions:input_type -> subscription.v1.ListSubscriptionsRequest
	5,  // 24: subscription.v1.SubscriptionService.ListSubscriptionsByCustomer:input_type -> subscription.v1.ListSubscriptionsByCustomerRequest
	6,  // 25: subscription.v1.SubscriptionService.CancelSubscription:input_type -> subscription.v1.CancelSubscriptionRequest
	7,  // 26: subscription.v1.SubscriptionService.PauseSubscription:input_type -> subscription.v1.PauseSubscriptionRequest
	8,  // 27: subscription.v1.SubscriptionService.ResumeSubscription:input_type -> subscription.v1.ResumeSubscriptionRequest
	11, // 28: subscription.v1.SubscriptionService.CreateSubscriptionPlan:input_type -> subscription.v1.CreateSubscriptionPlanRequest
	12, // 29: subscription.v1.SubscriptionService.GetSubscriptionPlan:input_type -> subscription.v1.GetSubscriptionPlanRequest
	13, // 30: subscription.v1.SubscriptionService.ListSubscriptionPlans:input_type -> subscription.v1.ListSubscriptionPlansRequest
	14, // 31: subscription.v1.SubscriptionService.UpdateSubscriptionPlan:input_type -> subscription.v1.UpdateSubscriptionPlanRequest
	15, // 32: subscription.v1.SubscriptionService.DeleteSubscriptionPlan:input_type -> subscription.v1.DeleteSubscriptionPlanRequest
	9,  // 33: subscription.v1.SubscriptionService.CreateSubscription:output_type -> subscription.v1.SubscriptionResponse
	9,  // 34: subscription.v1.SubscriptionService.GetSubscription:output_type -> subscription.v1.SubscriptionResponse
	10, // 35: subscription.v1.SubscriptionService.ListSubscriptions:output_type -> subscription.v1.ListSubscriptionsResponse
	10, // 36: subscription.v1.SubscriptionService.ListSubscriptionsByCustomer:output_type -> subscription.v1.ListSubscriptionsResponse
	9,  // 37: subscription.v1.SubscriptionService.CancelSubscription:output_type -> subscription.v1.SubscriptionResponse
	9,  // 38: subscription.v1.SubscriptionService.PauseSubscription:output_type -> subscription.v1.SubscriptionResponse
	9,  // 39: subscription.v1.SubscriptionService.ResumeSubscription:output_type -> subscription.v1.SubscriptionResponse
	16, // 40: subscription.v1.SubscriptionService.CreateSubscriptionPlan:output_type -> subscription.v1.SubscriptionPlanResponse
	16, // 41: subscription.v1.SubscriptionService.GetSubscriptionPlan:output_type -> subscription.v1.SubscriptionPlanResponse
	17, // 42: subscription.v1.SubscriptionService.ListSubscriptionPlans:output_type -> subscription.v1.ListSubscriptionPlansResponse
	16, // 43: subscription.v1.SubscriptionService.UpdateSubscriptionPlan:output_type -> subscription.v1.SubscriptionPlanResponse
	18, // 44: subscription.v1.SubscriptionService.DeleteSubscriptionPlan:output_type -> subscription.v1.DeleteSubscriptionPlanResponse
	33, // [33:45] is the sub-list for method output_type
	21, // [21:33] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_subscription_v1_subscription_proto_init() }
func file_proto_subscription_v1_subscription_proto_init() {
	if File_proto_subscription_v1_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_subscription_v1_subscription_proto_rawDesc), len(file_proto_subscription_v1_subscription_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_subscription_v1_subscription_proto_goTypes,
		DependencyIndexes: file_proto_subscription_v1_subscription_proto_depIdxs,
		EnumInfos:         file_proto_subscription_v1_subscription_proto_enumTypes,
		MessageInfos:      file_proto_subscription_v1_subscription_proto_msgTypes,
	}.Build()
	File_proto_subscription_v1_subscription_proto = out.File
	file_proto_subscription_v1_subscription_proto_goTypes = nil
	file_proto_subscription_v1_subscription_proto_depIdxs = nil
}
